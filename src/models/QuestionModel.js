const { v4: uuidv4 } = require('uuid');

/** Define Question class for each Question
 *  @kind Class
 *  @type Model
 */

class Question {
  /** Construct answer object
   *  @param {String} id - the question autogenerated id
   *  @param {String} answer - The answer string
   *  @param {String} parentQuestionID - The ID of the Question the answer belongs to
   */
  constructor(question, categories) {
    this._id = uuidv4();
    this._question = question;
    this._ratings = [];
    this._answers = [];
    this._categories = Array.isArray(categories) ? categories : [];
  }

  get id() {
    return this._id;
  }

  get question() {
    return this._question;
  }

  set rating(rating) {
    return this._ratings.push(rating);
  }

  get ratings() {
    return this._ratings;
  }

  get answers() {
    return this._answers;
  }

  set answers(answer) {
    return this._answers.push(answer);
  }

  get categories() {
    return this._categories;
  }

  set categories(category) {
    return this._categories.push(category);
  }

  //   getAverageRating() {
  //     let sum = 0;
  //     this._ratings.forEach(rating => (sum += rating));
  //     return (sum / this._ratings.length).toFixed(1);
  //   }

  //   addRating(rating) {
  //     this.rating = rating;
  //   }

  //   addAnswer(answer) {
  //     if (typeof answer === 'object' && !Array.isArray(answer) && answer !== null && answer.id && answer.answer) {
  //       this.answers = answer;
  //     }
  //   }

  //   removeAnswer(id) {
  //     const newAnswers = this.answers.filter(anse => {
  //       return anse.id != id;
  //     });
  //     this._answers = newAnswers;
  //   }

  //   addCategory(category) {
  //     this.categories = category.toString().trim();
  //   }

  //   removeCategory(category) {
  //     if (this.categories.indexOf(category.toString().trim()) > -1) {
  //       const newCategories = this.categories.filter(cate => {
  //         return cate != category;
  //       });
  //       this._categories = newCategories;
  //       console.log(this.categories);
  //     }
  //     return this.categories;
  //   }

  //   getId() {
  //     return this.id;
  //   }

//   present() {
//     return {
//       id: this.id,
//       question: this.question,
//       answers: this.answers,
//       categories: this.categories,
//       rating: this.getAverageRating(),
//     };
//   }

  mapToModel() {
    return {
      question_id: this.id,
      question: this.question,
      answers: this.answers,
      categories: this.categories,
      ratings: this.ratings,
    };
  }
}

module.exports = Question;
